version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: crave-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crave_search
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: crave-redis
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    image: node:20-bullseye
    container_name: crave-api
    working_dir: /workspace
    command: >
      bash -lc "
        corepack enable &&
        pnpm install --frozen-lockfile &&
        cd apps/api &&
        pnpm prisma generate &&
        pnpm prisma db push &&
        LOG_CONSOLE=true LOG_FILES=false pnpm start:dev
      "
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/crave_search
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      LOG_CONSOLE: 'true'
      LOG_FILES: 'false'
      NO_COLOR: 'true'
    ports:
      - '3000:3000'
    volumes:
      - .:/workspace
      - pnpm-store:/root/.local/share/pnpm/store
      - root-node_modules:/workspace/node_modules
      - api-node_modules:/workspace/apps/api/node_modules
      - shared-node_modules:/workspace/packages/shared/node_modules
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: crave-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.2.0
    container_name: crave-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - '3001:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  loki:
    image: grafana/loki:3.1.1
    container_name: crave-loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./observability/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    ports:
      - '3100:3100'
    restart: unless-stopped

  promtail:
    image: grafana/promtail:3.1.1
    container_name: crave-promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./observability/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pnpm-store:
  root-node_modules:
  api-node_modules:
  shared-node_modules:
  grafana-data:
  loki-data:
